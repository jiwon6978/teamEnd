plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //WEB(MVC -  인터셉터,리스너...)
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //JSP EMBED TOMCAT
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:11.0.10'

    //JSP EL PARSER
    implementation 'jakarta.el:jakarta.el-api:6.0.1'
    implementation 'jakarta.servlet:jakarta.servlet-api' //스프링부트 3.0 이상
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' //스프링부트 3.0 이상
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl' //스프링부트 3.0 이상

    //LOMBOK
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //THYMELEAF
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    //DB(+ORM(JPA))
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    //OAUTH2-CLIENT
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //JWT TOKEN LIB
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'

    //VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // JSTL API (자카르타 네임스페이스)
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:1.2.7'
    // JSTL 구현체 (주로 GlassFish 구현체를 사용함)
    runtimeOnly 'org.glassfish.web:jakarta.servlet.jsp.jstl:1.2.6'

    //REDIS
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

    //OPENAPI DOC (SWAGGER API 연동)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'

    //TEST
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

